name: Build

on:
  push:
    branches:
      - main
    tags:
      - v[0-9]+.[0-9]+.[0-9]+

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache-dependency-path: '**/go.sum'

      - name: Setup Protobuf prerequisites
        run: |
          sudo apt-get install -y protobuf-compiler
          go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest

      - name: Setup Go Reporting Prerequisites
        run: |
          go install github.com/ctrf-io/go-ctrf-json-reporter/cmd/go-ctrf-json-reporter@latest
          go install github.com/axw/gocov/gocov@latest
          go install github.com/AlekSi/gocov-xml@latest

      - name: Download Borg
        run: |
          mkdir -p "$HOME/.local/bin"
          echo "PATH=$PATH:$HOME/.local/bin" >> "$GITHUB_ENV"
          
          curl -L -o "$HOME/.local/bin/borg" https://github.com/borgbackup/borg/releases/download/1.4.1/borg-linux-glibc228
          chmod +x "$HOME/.local/bin/borg"

      - name: Run tests
        run: make test-ci

      - name: Upload Test Results
        if: always()
        uses: ctrf-io/github-test-reporter@v1
        with:
          report-path: ctrf-report.json

      - name: Build binaries
        run: |
          case ${{ github.ref_name }} in
            v*)
              VERSION=${{ github.ref_name }}
              export VERSION=${VERSION#"v"}
              ;;
            *)
              export VERSION=snapshot-${{ github.sha }}
          esac
          
          GOARCH_LIST=(arm arm64 amd64)
          for ARCH in "${GOARCH_LIST[@]}"; do
            if [[ "$ARCH" == "arm" ]]; then
              suffix_arch=armv7l
            else
              suffix_arch="${ARCH}"
            fi
          
            echo "Building for linux-${ARCH}"
          
            export SUFFIX="linux-${suffix_arch}"
            export GOOS=linux
            export GOARCH="${ARCH}"
          
            make build-ci
          done
        env:
          GOARM: '7'
          GOARM64: v8.0

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.run_id }}_artifacts
          path: bin

  release:
    if: github.ref_type == 'tag'
    needs: [ 'build' ]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Previous Tag
        id: previousTag
        run: |
          name=$(git --no-pager tag --sort=creatordate --merged ${{ github.ref_name }} | tail -2 | head -1)
          echo "previousTag: $name"
          echo "previousTag=$name" >> $GITHUB_ENV

      - name: Generate CHANGELOG
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          token: ${{ github.token }}
          fromTag: ${{ github.ref_name }}
          toTag: ${{ env.previousTag }}
          writeToFile: false
          excludeTypes: build,chore,ci,docs,other,style,test

      - name: Retrieve artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ github.run_id }}_artifacts
          path: bin

      - name: Compress executables
        run: |
          chmod +x ./bin/*
          upx -9 ./bin/*

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.RELEASE_PAT }}
          body: ${{ steps.changelog.outputs.changes }}
          files: bin/*
